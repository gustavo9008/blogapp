const express=require("express"),router=express.Router(),Blog=require("../models/blog"),Comment=require("../models/comment"),Profile=require("../models/profile"),middleWare=require("../middleware/loginMiddleWare");router.post("/blogs/:id/comments",middleWare.isLoggedIn,(req,res)=>{Blog.findById(req.params.id,(err,blog)=>{if(err)return res.status(400).send("error");Comment.create(req.body.comment,(err,comment)=>{if(err)return res.status(400).send("error");{comment.profile=req.user.profile[0],comment.url.address="/blogs/"+blog._id,comment.url.title=blog.title,comment.author.id=req.user._id,comment.author.username=req.user.username,comment.save(),blog.comments.push(comment),blog.save(),Profile.findById(req.user.profile,(err,foundProfile)=>{if(err)return res.status(400).send("error");foundProfile.comments.push(comment),foundProfile.save()});let successResponse=req.flash("success","Comment Added.");return res.status(200).json(successResponse)}})})}),router.post("/blogs/:id/comments/:commentId",middleWare.isLoggedIn,(req,res)=>{Comment.findById(req.params.commentId,(err,comment)=>{if(err)return res.status(400).send("error");let reply={text:req.body.commentReply,profile:req.user.profile[0],url:{address:"/blogs/"+req.params.id},author:{id:req.user._id,username:req.user.username}};comment.replies.push(reply),comment.save();let successResponse=req.flash("success","Reply Added.");return res.status(200).json(successResponse)})}),router.put("/blogs/:id/comments/:comment_id",middleWare.checkCommentOwner,(req,res)=>{Comment.findByIdAndUpdate(req.params.comment_id,req.body.comment,(err,updatedComment)=>{if(err)return res.status(400).send("error");{let successResponse=req.flash("success","Comment updated.");return res.status(200).json(successResponse)}})}),router.put("/blogs/:id/:comment_id/:reply_id",middleWare.isLoggedIn,(req,res)=>{Comment.findById(req.params.comment_id,(err,comment)=>{if(err)return res.status(400).send("error");for(var rep=comment.replies,i=0;i<rep.length;i++)rep[i]._id==req.params.reply_id&&(rep[i].author.username===req.user.username?saveReply():errorRedirect());function saveReply(){rep[i].text=req.body.comment.text,comment.save(),redirect()}function redirect(){let successResponse=req.flash("success","Comment updated.");return res.status(200).json(successResponse)}function errorRedirect(){return res.status(400).send("error")}})}),router.delete("/blogs/:blog_id/comments/:comment_id",middleWare.checkCommentOwner,(req,res)=>{let c_id=req.params.comment_id;Profile.findByIdAndUpdate(req.user.profile,{$pull:{comments:c_id}},{safe:!0,multi:!0},(function(err,comment){if(err)return res.status(400).send("error")})),Blog.findByIdAndUpdate(req.params.blog_id,{$pull:{comments:c_id}},{safe:!0,multi:!0},(err,comment)=>{if(err)return res.status(400).send("error")}),Comment.findByIdAndRemove(req.params.comment_id,err=>{if(err)return res.status(400).send("error");let deleteResponse=req.flash("success","Comment has been deleted");return res.status(200).json(deleteResponse)})}),router.put("/comments/:comment_id/reply/:reply_id",middleWare.isLoggedIn,(req,res)=>{Comment.findById(req.params.comment_id,(err,comment)=>{if(err)return res.status(400).send(err.message);comment?(comment.replies.id(req.params.reply_id).remove(),comment.markModified("replies"),comment.save((function(saveerr,saveresult){if(saveerr)return res.status(400).send(saveerr.message);{let deleteMessage=req.flash("success","Reply deleted.");return res.status(200).json(deleteMessage)}}))):res.status(404).send("comment was not found")})}),module.exports=router;