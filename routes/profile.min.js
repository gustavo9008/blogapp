const express=require("express"),router=express.Router(),passport=require("passport"),User=require("../models/user"),Profile=require("../models/profile"),Blog=require("../models/blog"),Comment=require("../models/comment"),middleWare=require("../middleware/loginMiddleWare"),multer=require("multer"),{storage:storage,cloudinary:cloudinary}=require("../cloudinary"),{default:async}=require("async"),upload=multer({storage:storage});function generateRandomColors(num){for(var arr=[],i=0;i<num;i++)arr.push(randomColor());return arr}function randomColor(){let r,g,b;return"rgb("+Math.floor(256*Math.random())+", "+Math.floor(256*Math.random())+", "+Math.floor(256*Math.random())+")"}router.get("/blogs/register-profile",middleWare.isLoggedIn,(req,res)=>{res.render("userprofile",{currentUser:req.user})}),router.post("/blogs/register-profile",(req,res)=>{User.findById(req.user.id,(err,user)=>{if(err)return req.flash("error","oh no something went wrong, please try again"),res.redirect("back");{let genericPic=generateRandomColors(3),name,about,skills,newProfile={name:{id:req.user._id,name:req.user.name,username:req.user.username},about:req.body.about,genericPic:genericPic,skills:req.body.skills};Profile.create(newProfile,(err,profile)=>err?(req.flash("error","oh no something went wrong, please try again later"),res.redirect("back")):(profile.save(),user.profileRegistered=!0,user.profile.push(profile),user.save(),res.redirect("/blogs")))}})}),router.get("/blogs/profile",middleWare.isLoggedIn,middleWare.findProfile,(req,res)=>{User.findById(req.user.id,(err,user)=>{if(err)return req.flash("error","could not find your profile please try again later"),res.redirect("back");Profile.findById(req.user.profile).populate({path:"blogs",options:{sort:{created:-1}}}).populate({path:"comments",options:{sort:{created:-1}}}).exec((err,foundProfile)=>{if(err)return req.flash("error","could not find your profile please try again later"),res.redirect("back");let blog_id=req.user.blog_id;res.render("myprofile",{user:user,profile:foundProfile,blog:blog_id})})})}),router.get("/blogs/userprofile/:id",middleWare.findProfile,(req,res)=>{Profile.findById(req.params.id).populate({path:"name",options:{path:"id"}}).populate({path:"blogs",options:{sort:{created:-1}}}).populate({path:"comments",options:{sort:{created:-1}}}).exec((err,foundProfile)=>err?(req.flash("error","Could not find user, try again later"),res.redirect("back")):res.render("profile",{profile:foundProfile}))}),router.get("/blogs/profile/settings",middleWare.isLoggedIn,middleWare.findProfile,(req,res)=>res.render("settings",{user:req.user,profile:req.profile})),router.put("/blogs/profile/settings",middleWare.isLoggedIn,middleWare.findProfile,upload.array("file"),(req,res)=>{let updatePicProfile,updatedColor;function updateProfilePicture(){Profile.findByIdAndUpdate(req.user.profile,{$pull:{image:{filename:{$in:req.body.oldImage}}}},{safe:!0,multi:!0},(function(err,model){if(err)return res.status(400).send("error");if(req.files[0]){let image=req.files.map(f=>({url:f.path,filename:f.filename}));updatePicProfile={image:image}}if(req.body.genericPic0){let genericPic=[`${req.body.genericPic0}`,`${req.body.genericPic1}`,`${req.body.genericPic2}`];const updatePicProfile=!1;updatedColor={genericPic:genericPic}}const updatedPic_Color=req.files[0]?updatePicProfile:updatedColor;Profile.findByIdAndUpdate(req.user.profile,updatedPic_Color,(err,profile)=>{if(err&&res.send(err),!profile.blogs){let successMessage=req.flash("success","You have updated your profile picture.");return res.status(200).json(successMessage)}changeBlogImage(profile)})}))}function changeBlogImage(profile){let blogLength=Object.keys(profile.blogs);for(let i=0;i<blogLength.length;i++)Blog.findById(profile.blogs[i],(err,blog)=>{err&&req.flash("error","some posts could not update"),req.files[0]&&(blog.profile.image=updatePicProfile.image[0].url),req.body.genericPic0&&(blog.profile.image&&(blog.profile.image=""),blog.profile.genericPic=updatedColor.genericPic),blog.save()});let successMessage=req.flash("success","You have updated your profile picture/color.");return res.status(200).json(successMessage)}req.body.oldImage?(cloudinary.uploader.destroy(req.body.oldImage),updateProfilePicture()):updateProfilePicture()}),router.put("/blogs/profile/settings/updateProfile",middleWare.isLoggedIn,middleWare.findProfile,(req,res)=>{let about,skills,location,links,newProfile={about:req.body.about,skills:req.body.skills,location:req.body.location,links:{personalWebsite:req.body.personal,instagram:req.body.instagram,twitter:req.body.twitter,youtube:req.body.youtube,linkedin:req.body.linkedin}};Profile.findByIdAndUpdate(req.user.profile,newProfile,(err,updatedProfile)=>(err&&req.flash("error","oh no something went wrong, try again later"),updatedProfile?(req.flash("success","Updated profile"),res.redirect("back")):updatedProfile?void 0:res.send("no profile")))}),router.delete("/deleteaccount",middleWare.isLoggedIn,(req,res)=>{let c_profile=req.body.user_profile;Comment.deleteMany({profile:req.body.user_profile},err=>{if(err){let errorMessage=req.flash("error","no comments found");return res.status(400).json(errorMessage)}}),Blog.find({"profile.id":req.body.user_profile},(err,post)=>{if(err){let errorMessage=req.flash("errer","No blogs found");return res.status(400).json(errorMessage)}if(post){let postLength=Object.keys(post);function checkPic(){for(let i=0;i<postLength.length;i++)post[i].image[0]&&cloudinary.uploader.destroy(post[i].image[0].filename)}async function deletePostPic(){await checkPic(),await deletePosts()}function deletePosts(){Blog.deleteMany({"profile.id":req.body.user_profile},(err,doc)=>{if(err){let errorMessage=req.flash("error","oops something went wrong");return res.status(400).json(errorMessage)}})}deletePostPic()}}),Profile.findByIdAndDelete(req.body.user_profile,err=>{if(err){let errorMessage=req.flash("error","oops something went wrong");return res.status(400).json(errorMessage)}}),User.findByIdAndDelete(req.body.user_id,err=>{if(err){let errorMessage=req.flash("error","oops something went wrong");return res.status(400).json(errorMessage)}});let successDelete={deleteResponse:!0},successMessage=req.flash("success","You have deleted your account ðŸ˜ž");return res.status(200).json(successDelete)}),module.exports=router;